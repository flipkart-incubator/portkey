<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mockito="http://www.mockito.org/spring/mockito"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:project.properties" />
	</bean>

	<bean id="redisDataStore" class="com.flipkart.portkey.redis.datastore.RedisDataStore">
		<property name="shardIdToPersistenceManagerMap" ref="shardIdToPersistenceManagerMap" />
		<property name="metaDataCache" ref="redisMetaDataCache" />
	</bean>

	<util:map id="shardIdToPersistenceManagerMap" key-type="String"
		value-type="com.flipkart.portkey.common.persistence.PersistenceManager">
		<entry key="01" value-ref="shard1" />
	</util:map>
	<bean id="redisMetaDataCache" class="com.flipkart.portkey.redis.metadata.RedisMetaDataCache"
		factory-method="getInstance" />

	<bean id="shard1"
		class="com.flipkart.portkey.redis.persistence.RedisPersistenceManager">
		<property name="host">
			<value>${REDIS_SHARD1_HOST}</value>
		</property>
		<property name="port">
			<value>${REDIS_SHARD1_PORT}</value>
		</property>
		<property name="database">
			<value>${REDIS_SHARD1_DATABASE}</value>
		</property>
		<property name="password">
			<value>${REDIS_SHARD1_PASSWORD}</value>
		</property>
		<property name="poolConfig">
            <props>
            <prop key="blockWhenExhausted">${REDIS_POOL_CONFIG_BLOCK_WHEN_EXHAUSTED}</prop>
            <prop key="jmxEnabled">${REDIS_POOL_CONFIG_JMX_ENABLED}</prop>
            <prop key="jmxPrefix">${REDIS_POOL_CONFIG_JMX_PREFIX}</prop>
            <prop key="maxIdle">${REDIS_POOL_CONFIG_MAX_IDLE}</prop>
            <prop key="maxTotal">${REDIS_POOL_CONFIG_MAX_TOTAL}</prop>
            <prop key="maxWaitMillis">${REDIS_POOL_CONFIG_MAX_WAIT_MILLS}</prop>
            <prop key="minEvictableIdleTimeMillis">${REDIS_POOL_CONFIG_MIN_EVICTABLE_IDLE_TIME_MILLS}</prop>
            <prop key="minIdle">${REDIS_POOL_CONFIG_MIN_IDLE}</prop>
            <prop key="testOnBorrow">${REDIS_POOL_CONFIG_TEST_ON_BORROW}</prop>
            <prop key="testOnReturn">${REDIS_POOL_CONFIG_TEST_ON_RETURN}</prop>
            <prop key="timeBetweenEvictionRunsMillis">${REDIS_POOL_CONFIG_TIME_BETWEEN_EVICTION_RUNS_MILLS}</prop>
            </props>
        </property>
	</bean>
</beans>